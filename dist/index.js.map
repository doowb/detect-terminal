{"version":3,"sources":["../index.ts"],"sourcesContent":["import { execSync } from 'child_process';\n\nexport const detectFromEnv = (): string => {\n  const program = process.env.TERM_PROGRAM?.trim()?.toLowerCase();\n  switch (program) {\n    case 'apple_terminal': return 'terminal';\n    case 'eterm': return 'eterm';\n    case 'hyper': return 'hyper';\n    case 'iterm.app': return 'iterm';\n    case 'iterm': return 'iterm';\n    case 'powershell': return 'powershell';\n    case 'putty': return 'putty';\n    case 'qterminal': return 'qterminal';\n    case 'terminal.app': return 'terminal_app';\n    case 'terminator': return 'terminator';\n    case 'termux': return 'termux';\n    case 'vscode': return 'vscode';\n    case 'warp': return 'warp';\n    case 'wezterm': return 'wezterm';\n    default: break;\n  }\n\n  return program?.replace(/[^a-z]/g, '_') || null;\n};\n\nexport const detectFromShell = (): string => {\n  try {\n    const terminal = execSync('echo $TERM', { encoding: 'utf8' }).trim();\n    return terminal;\n  } catch {\n    return null;\n  }\n};\n\nexport const detectFromProcessTitle = (): string => {\n  const processTitle = process.title?.toLowerCase();\n  if (/bash/.test(processTitle)) return 'bash';\n  if (/zsh/.test(processTitle)) return 'zsh';\n  if (/cmd/.test(processTitle)) return 'cmd';\n  if (/powershell/.test(processTitle)) return 'powershell';\n  if (/sh/.test(processTitle)) return 'sh';\n  return null;\n};\n\nexport const detectTerminal = (): string => {\n  let terminal = detectFromEnv();\n\n  if (!terminal) {\n    terminal = detectFromShell();\n  }\n\n  if (!terminal) {\n    terminal = detectFromProcessTitle();\n  }\n\n  return terminal || 'unknown';\n};\n\nexport default detectTerminal;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAElB,IAAM,gBAAgB,6BAAc;AACzC,QAAM,UAAU,QAAQ,IAAI,cAAc,KAAK,GAAG,YAAY;AAC9D,UAAQ,SAAS;AAAA,IACf,KAAK;AAAkB,aAAO;AAAA,IAC9B,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAc,aAAO;AAAA,IAC1B,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAgB,aAAO;AAAA,IAC5B,KAAK;AAAc,aAAO;AAAA,IAC1B,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAW,aAAO;AAAA,IACvB;AAAS;AAAA,EACX;AAEA,SAAO,SAAS,QAAQ,WAAW,GAAG,KAAK;AAC7C,GArB6B;AAuBtB,IAAM,kBAAkB,6BAAc;AAC3C,MAAI;AACF,UAAM,eAAW,+BAAS,cAAc,EAAE,UAAU,OAAO,CAAC,EAAE,KAAK;AACnE,WAAO;AAAA,EACT,QAAQ;AACN,WAAO;AAAA,EACT;AACF,GAP+B;AASxB,IAAM,yBAAyB,6BAAc;AAClD,QAAM,eAAe,QAAQ,OAAO,YAAY;AAChD,MAAI,OAAO,KAAK,YAAY,EAAG,QAAO;AACtC,MAAI,MAAM,KAAK,YAAY,EAAG,QAAO;AACrC,MAAI,MAAM,KAAK,YAAY,EAAG,QAAO;AACrC,MAAI,aAAa,KAAK,YAAY,EAAG,QAAO;AAC5C,MAAI,KAAK,KAAK,YAAY,EAAG,QAAO;AACpC,SAAO;AACT,GARsC;AAU/B,IAAM,iBAAiB,6BAAc;AAC1C,MAAI,WAAW,cAAc;AAE7B,MAAI,CAAC,UAAU;AACb,eAAW,gBAAgB;AAAA,EAC7B;AAEA,MAAI,CAAC,UAAU;AACb,eAAW,uBAAuB;AAAA,EACpC;AAEA,SAAO,YAAY;AACrB,GAZ8B;AAc9B,IAAO,0BAAQ;","names":[]}